# coding: utf-8
from __future__ import annotations
from model.generic_mixin import GenericMixin
"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.25
    Generated by: https://openapi-generator.tech
"""

class V1Volume(GenericMixin):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    name: str
    openapi_types = {
    #     'aws_elastic_block_store': 'V1AWSElasticBlockStoreVolumeSource',
    #     'azure_disk': 'V1AzureDiskVolumeSource',
    #     'azure_file': 'V1AzureFileVolumeSource',
    #     'cephfs': 'V1CephFSVolumeSource',
    #     'cinder': 'V1CinderVolumeSource',
    #     'config_map': 'V1ConfigMapVolumeSource',
    #     'csi': 'V1CSIVolumeSource',
    #     'downward_api': 'V1DownwardAPIVolumeSource',
    #     'empty_dir': 'V1EmptyDirVolumeSource',
    #     'ephemeral': 'V1EphemeralVolumeSource',
    #     'fc': 'V1FCVolumeSource',
    #     'flex_volume': 'V1FlexVolumeSource',
    #     'flocker': 'V1FlockerVolumeSource',
    #     'gce_persistent_disk': 'V1GCEPersistentDiskVolumeSource',
    #     'git_repo': 'V1GitRepoVolumeSource',
    #     'glusterfs': 'V1GlusterfsVolumeSource',
    #     'host_path': 'V1HostPathVolumeSource',
    #     'iscsi': 'V1ISCSIVolumeSource',
        'name': 'str',
    #     'nfs': 'V1NFSVolumeSource',
    #     'persistent_volume_claim': 'V1PersistentVolumeClaimVolumeSource',
    #     'photon_persistent_disk': 'V1PhotonPersistentDiskVolumeSource',
    #     'portworx_volume': 'V1PortworxVolumeSource',
    #     'projected': 'V1ProjectedVolumeSource',
    #     'quobyte': 'V1QuobyteVolumeSource',
    #     'rbd': 'V1RBDVolumeSource',
    #     'scale_io': 'V1ScaleIOVolumeSource',
    #     'secret': 'V1SecretVolumeSource',
    #     'storageos': 'V1StorageOSVolumeSource',
    #     'vsphere_volume': 'V1VsphereVirtualDiskVolumeSource'
    }

    attribute_map = {
        'aws_elastic_block_store': 'awsElasticBlockStore',
        'azure_disk': 'azureDisk',
        'azure_file': 'azureFile',
        'cephfs': 'cephfs',
        'cinder': 'cinder',
        'config_map': 'configMap',
        'csi': 'csi',
        'downward_api': 'downwardAPI',
        'empty_dir': 'emptyDir',
        'ephemeral': 'ephemeral',
        'fc': 'fc',
        'flex_volume': 'flexVolume',
        'flocker': 'flocker',
        'gce_persistent_disk': 'gcePersistentDisk',
        'git_repo': 'gitRepo',
        'glusterfs': 'glusterfs',
        'host_path': 'hostPath',
        'iscsi': 'iscsi',
        'name': 'name',
        'nfs': 'nfs',
        'persistent_volume_claim': 'persistentVolumeClaim',
        'photon_persistent_disk': 'photonPersistentDisk',
        'portworx_volume': 'portworxVolume',
        'projected': 'projected',
        'quobyte': 'quobyte',
        'rbd': 'rbd',
        'scale_io': 'scaleIO',
        'secret': 'secret',
        'storageos': 'storageos',
        'vsphere_volume': 'vsphereVolume'
    }

    @staticmethod
    def new() -> V1Volume:
        return V1Volume()


