from services.cluster.k8s.model.generic_mixin import GenericMixin
from typing import Optional


class V1Toleration(GenericMixin):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    key: str
    value: Optional[str]
    effect: Optional[str]
    operator: Optional[str]
    # toleration_seconds: int

    openapi_types = {
        'effect': 'str',
        'key': 'str',
        'operator': 'str',
        'toleration_seconds': 'int',
        'value': 'str'
    }

    attribute_map = {
        'effect': 'effect',
        'key': 'key',
        'operator': 'operator',
        'toleration_seconds': 'tolerationSeconds',
        'value': 'value'
    }

    @classmethod
    def exist(cls, key: str):
        return cls.default(key=key, operator="Exists")

    @classmethod
    def default(cls, key: str, operator: str):
        return cls.new(key=key, operator=operator, effect=None, value=None)

    @staticmethod
    def new(key: str, value: Optional[str], effect: Optional[str], operator: Optional[str]):
        return V1Toleration(key=key, value=value, effect=effect, operator=operator)
