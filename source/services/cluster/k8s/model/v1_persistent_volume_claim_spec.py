from __future__ import annotations
from k8s.model.v1_resource_requirements import V1ResourceRequirements
from k8s.model.generic_mixin import GenericMixin
from k8s.const.workloads_const import VOLUME_ACCESS_MODE_READ_WRITE_MANY, VOLUME_STORAGE_CLASS_JUICEFS
from typing import List

class V1PersistentVolumeClaimSpec(GenericMixin):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    access_modes: List[str]
    resources: V1ResourceRequirements
    storage_class_name: str
    openapi_types = {
        'access_modes': 'list[str]',
        # 'data_source': 'V1TypedLocalObjectReference',
        # 'data_source_ref': 'V1TypedLocalObjectReference',
        'resources': 'V1ResourceRequirements',
        # 'selector': 'V1LabelSelector',
        'storage_class_name': 'str',
        # 'volume_mode': 'str',
        # 'volume_name': 'str'
    }

    attribute_map = {
        'access_modes': 'accessModes',
        'data_source': 'dataSource',
        'data_source_ref': 'dataSourceRef',
        'resources': 'resources',
        'selector': 'selector',
        'storage_class_name': 'storageClassName',
        'volume_mode': 'volumeMode',
        'volume_name': 'volumeName'
    }

    @classmethod
    def default(cls, size):
        return cls.new(access_modes=[VOLUME_ACCESS_MODE_READ_WRITE_MANY],
                       resources=V1ResourceRequirements.only_requests_storage(size=size),
                       storage_class_name=VOLUME_STORAGE_CLASS_JUICEFS)

    @staticmethod
    def new(access_modes: List[str], resources: V1ResourceRequirements, storage_class_name: str):
        return V1PersistentVolumeClaimSpec(access_modes=access_modes, resources=resources,
                                           storage_class_name=storage_class_name)

