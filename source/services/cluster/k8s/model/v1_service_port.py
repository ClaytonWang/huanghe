# -*- coding: utf-8 -*-

from __future__ import annotations
from services.cluster.k8s.model.generic_mixin import GenericMixin


class V1ServicePort(GenericMixin):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    name: str
    port: int
    protocol: str
    target_port: int
    openapi_types = {
        # 'app_protocol': 'str',
        'name': 'str',
        # 'node_port': 'int',
        'port': 'int',
        'protocol': 'str',
        # 'target_port': 'object'
        'target_port': 'int'
    }

    attribute_map = {
        # 'app_protocol': 'appProtocol',
        'name': 'name',
        # 'node_port': 'nodePort',
        'port': 'port',
        'protocol': 'protocol',
        'target_port': 'targetPort'
    }

    @classmethod
    def default(cls, port: int):
        return cls.new(name='http', port=port, target_port=80, protocol='TCP')

    @staticmethod
    def new(name: str, port: int, target_port: int, protocol: str):
        # print(f"name={name}, port={port}, target_port={target_port}, protocol={protocol}")
        return V1ServicePort(name=name, port=port, target_port=target_port, protocol=protocol)
