from services.cluster.k8s.model.v1_pod_spec import V1PodSpec
from services.cluster.k8s.model.v1_object_meta import V1ObjectMeta
from services.cluster.k8s.model.generic_mixin import GenericMixin
from typing import Dict


class V1PodTemplateSpec(GenericMixin):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    metadata: V1ObjectMeta
    spec: V1PodSpec

    openapi_types = {
        'metadata': 'V1ObjectMeta',
        'spec': 'V1PodSpec'
    }

    attribute_map = {
        'metadata': 'metadata',
        'spec': 'spec'
    }

    @classmethod
    def deployment(cls, name: str, image: str, labels: Dict[str, str], resource: Dict[str, str], envs: Dict[str, str]):
        return cls.new(metadata=V1ObjectMeta.default(name=name, labels=labels),
                       spec=V1PodSpec.deployment(name=name,
                                                 image=image,
                                                 resource=resource,
                                                 envs=envs))

    @classmethod
    def default(cls, name: str, image: str, labels: Dict[str, str]):
        return cls.new(metadata=V1ObjectMeta.default(name=name, labels=labels), spec=V1PodSpec.default(name, image))

    @staticmethod
    def new(metadata: V1ObjectMeta, spec: V1PodSpec):
        return V1PodTemplateSpec(metadata=metadata,
                                 spec=spec)
