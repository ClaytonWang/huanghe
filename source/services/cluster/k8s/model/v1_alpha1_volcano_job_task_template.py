from __future__ import annotations
from services.cluster.k8s.model.generic_mixin import GenericMixin
from services.cluster.k8s.model.v1_pod_spec import V1PodSpec
from services.cluster.k8s.model.v1_object_meta import V1ObjectMeta


class V1Alpha1VolcanoJobTaskTemplate(GenericMixin):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    spec: V1PodSpec
    metadata: V1ObjectMeta
    openapi_types = {
        'spec': 'V1PodSpec',
        "metadata": "V1ObjectMeta"
    }

    attribute_map = {
        'spec': 'spec',
        'metadata': 'metadata',
    }

    @classmethod
    def default(cls, name, image, resource, envs, volumes, tolerations, command, working_dir):
        return cls.new(spec=V1PodSpec.vcjob(name=name, image=image, resource=resource, envs=envs, volumes=volumes,
                                            tolerations=tolerations, command=command, working_dir=working_dir),
                       metadata=V1ObjectMeta.without_istio_injection(name=name))

    @staticmethod
    def new(spec: V1PodSpec, metadata: V1ObjectMeta) -> V1Alpha1VolcanoJobTaskTemplate:
        return V1Alpha1VolcanoJobTaskTemplate(spec=spec, metadata=metadata)


if __name__ == '__main__':
    s = V1PodSpec()
    s.to_dict()
